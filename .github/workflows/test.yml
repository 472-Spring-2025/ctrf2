name: Integration Test
on:
  pull_request:
  push:
    branches:
      - master
  schedule:
    - cron: '42 06 * * *'
jobs:
  test:
    name: Integration Test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Host information
        run: |
          echo "::group::Host information"
          echo "Hostname: $(hostname)"
          echo "IP: $(hostname -I)"
          echo "::endgroup::"
          echo "::group::Filesystem"
          df -h
          echo "::endgroup::"
          echo "::group::Memory"
          free -h
          echo "::endgroup::"
          echo "::group::CPU"
          lscpu
          echo "::endgroup::"

      - uses: actions/checkout@v4

      - name: Resolve Git Timestamps
        run: |
          git ls-files -z | xargs -0 -I {} sh -c 'touch -d "$(git log -1 --format="%ad" --date=format:%Y-%m-%dT%H:%M:%S -- {})" {}'

      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v5
        with:
          context: .
          tags: pwncollege/dojo:test

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Prepare Firefox
        uses: browser-actions/setup-firefox@latest

      - name: Install test dependencies
        run: pip install pytest pytest-dependency requests selenium

      - if: github.event_name != 'schedule'
        name: Restore Docker Images Cache
        uses: actions/cache/restore@v4
        with:
          path: /tmp/dojo-test-data/docker-images.tar.gz
          key: docker-images-${{ runner.os }}-${{ github.run_id }}
          restore-keys: |
            docker-images-${{ runner.os }}-

      - name: Run dojo
        run: |
          docker run \
            --name dojo-test \
            --privileged \
            --detach \
            --rm \
            -v /tmp/dojo-test-data:/opt/pwn.college/data:shared \
            -p 2222:22 -p 80:80 -p 443:443 \
            pwncollege/dojo:test

      - name: Build and Start Services
        run: |
          docker exec dojo-test dojo wait
          docker exec dojo-test docker image ls

      - if: github.event_name == 'schedule'
        name: Save Docker Images
        run: |
          docker exec dojo-test sh -c 'docker save $(docker image ls --format "{{.Repository}}:{{.Tag}}") | pigz > ./data/docker-images.tar.gz'

      - if: github.event_name == 'schedule'
        name: Cache Docker Images
        uses: actions/cache/save@v4
        with:
          path: /tmp/dojo-test-data/docker-images.tar.gz
          key: docker-images-${{ runner.os }}-${{ github.run_id }}

      - name: Wait for Services to Start
        timeout-minutes: 2
        run: |
          docker exec dojo-test dojo compose logs -f &
          log_pid=$!

          until [[ "$(docker exec dojo-test docker inspect --format='{{.State.Health.Status}}' ctfd)" == "healthy" ]]; do
            sleep 1
          done

          kill $log_pid
          exit 0

      - name: Run Tests
        run: |
          export MOZ_HEADLESS=1
          pytest -vrpP ./test || (docker exec dojo-test docker compose logs && false)
