name: Test building and running dojo
on: push
jobs:
  smoketest:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3

      - name: Cache dojo
        uses: actions/cache@v2
        with:
          path: /tmp/.buildkit-cache
          key: ${{ runner.os }}-dojo-buildkit-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-dojo-buildkit-

      - name: Info gathering
        run: |
          ls -la /tmp
          df -h

      - name: Install test dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          python -m pip install --upgrade pip
          pip install pytest pytest-dependency requests

      - name: Build dojo
        run: |
          docker build \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --cache-from=type=local,src=/tmp/.buildkit-cache \
            --cache-to=type=local,dest=/tmp/.buildkit-cache,mode=max \
            -t dojo-test \
            .

      - name: Run dojo
        run: |
          docker run \
            --privileged \
            -d \
            -v $(mktemp -d /tmp/dojo-data-XXXXXX):/opt/pwn.college/data:shared \
            -p 2222:22 -p 80:80 -p 443:443 \
            --name dojo-test \
            dojo-test

      - name: Wait for services to build and start
        run: |
          docker exec dojo-test dojo wait

      - name: Wait for services to be ready
        timeout-minutes: 2
        run: |
          docker exec dojo-test dojo compose logs -f &
          log_pid=$!

          until [[ "$(docker exec dojo-test docker inspect --format='{{.State.Health.Status}}' ctfd)" == "healthy" ]]; do
            sleep 1
          done

          kill $log_pid
          exit 0

      - name: Run tests against dojo
        run: |
          pytest -vrpP ./test || (docker exec dojo-test docker compose logs && false)



